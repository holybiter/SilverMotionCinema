// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SilverMotionCinema.Data;

#nullable disable

namespace SilverMotionCinema.Migrations
{
    [DbContext(typeof(SilverMotionContext))]
    partial class SilverMotionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieGenre", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenre", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("ShowId")
                        .HasColumnType("int")
                        .HasColumnName("ShowID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__73951ACD3D0354D1");

                    b.HasIndex("ShowId");

                    b.HasIndex("UserId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CinemaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TotalCinemaHalls")
                        .HasColumnType("int");

                    b.HasKey("CinemaId")
                        .HasName("PK__Cinema__59C926262FF5E513");

                    b.HasIndex("CityId");

                    b.ToTable("Cinema", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.CinemaHall", b =>
                {
                    b.Property<int>("CinemaHallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CinemaHallID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaHallId"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int")
                        .HasColumnName("CinemaID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("CinemaHallId")
                        .HasName("PK__Cinema_H__D21219604F82DAE6");

                    b.HasIndex("CinemaId");

                    b.ToTable("Cinema_Hall", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.CinemaSeat", b =>
                {
                    b.Property<int>("CinemaSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CinemaSeatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaSeatId"));

                    b.Property<int>("CinemaHallId")
                        .HasColumnType("int")
                        .HasColumnName("CinemaHallID");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("CinemaSeatId")
                        .HasName("PK__Cinema_S__771B5FE3E066ACB8");

                    b.HasIndex("CinemaHallId");

                    b.ToTable("Cinema_Seat", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.HasKey("CityId")
                        .HasName("PK__City__F2D21A9633E75EAA");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("GenreId")
                        .HasName("PK__Genres__0385057EEB552FEE");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("SilverMotionCinema.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("LanguageId")
                        .HasName("PK__Language__B93855ABAF6BAD34");

                    b.ToTable("Language", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.Models.AgeRating", b =>
                {
                    b.Property<int>("AgeRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgeRatingId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.HasKey("AgeRatingId")
                        .HasName("PK__Age_Rati__CC7BFE1EAE025F9D");

                    b.ToTable("Age_Rating", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MovieID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<int?>("AgeRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Country")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Selected")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("MovieId")
                        .HasName("PK__Movie__4BD2943A6AD5712A");

                    b.HasIndex("AgeRating");

                    b.HasIndex("LanguageId");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<int?>("DiscountCouponId")
                        .HasColumnType("int")
                        .HasColumnName("DiscountCouponID");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int?>("RemoteTransactionId")
                        .HasColumnType("int")
                        .HasColumnName("RemoteTransactionID");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A58B90BE465");

                    b.HasIndex("BookingId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.Show", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShowID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowId"));

                    b.Property<int>("CinemaHallId")
                        .HasColumnType("int")
                        .HasColumnName("CinemaHallID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("MovieID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("ShowId")
                        .HasName("PK__Show__6DE3E0D222C4785A");

                    b.HasIndex("CinemaHallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Show", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.ShowSeat", b =>
                {
                    b.Property<int>("ShowSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShowSeatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowSeatId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<int>("CinemaSeatId")
                        .HasColumnType("int")
                        .HasColumnName("CinemaSeatID");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ShowId")
                        .HasColumnType("int")
                        .HasColumnName("ShowID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ShowSeatId")
                        .HasName("PK__Show_Sea__9536FCB355635266");

                    b.HasIndex("BookingId");

                    b.HasIndex("CinemaSeatId");

                    b.HasIndex("ShowId");

                    b.ToTable("Show_Seat", (string)null);
                });

            modelBuilder.Entity("SilverMotionCinema.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC3F910AEF");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("MovieGenre", b =>
                {
                    b.HasOne("SilverMotionCinema.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieGenre_Genre");

                    b.HasOne("SilverMotionCinema.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieGenre_Movie");
                });

            modelBuilder.Entity("SilverMotionCinema.Booking", b =>
                {
                    b.HasOne("SilverMotionCinema.Show", "Show")
                        .WithMany("Bookings")
                        .HasForeignKey("ShowId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__ShowID__4AB81AF0");

                    b.HasOne("SilverMotionCinema.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__UserID__49C3F6B7");

                    b.Navigation("Show");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SilverMotionCinema.Cinema", b =>
                {
                    b.HasOne("SilverMotionCinema.City", "City")
                        .WithMany("Cinemas")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__Cinema__CityID__3D5E1FD2");

                    b.Navigation("City");
                });

            modelBuilder.Entity("SilverMotionCinema.CinemaHall", b =>
                {
                    b.HasOne("SilverMotionCinema.Cinema", "Cinema")
                        .WithMany("CinemaHalls")
                        .HasForeignKey("CinemaId")
                        .IsRequired()
                        .HasConstraintName("FK__Cinema_Ha__Cinem__403A8C7D");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("SilverMotionCinema.CinemaSeat", b =>
                {
                    b.HasOne("SilverMotionCinema.CinemaHall", "CinemaHall")
                        .WithMany("CinemaSeats")
                        .HasForeignKey("CinemaHallId")
                        .IsRequired()
                        .HasConstraintName("FK__Cinema_Se__Cinem__46E78A0C");

                    b.Navigation("CinemaHall");
                });

            modelBuilder.Entity("SilverMotionCinema.Movie", b =>
                {
                    b.HasOne("SilverMotionCinema.Models.AgeRating", "AgeRatingNavigation")
                        .WithMany("Movies")
                        .HasForeignKey("AgeRating")
                        .HasConstraintName("FK__Movie__AgeRating__6383C8BA");

                    b.HasOne("SilverMotionCinema.Language", "Language")
                        .WithMany("Movies")
                        .HasForeignKey("LanguageId")
                        .HasConstraintName("FK__Movie__LanguageI__6C190EBB");

                    b.Navigation("AgeRatingNavigation");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SilverMotionCinema.Payment", b =>
                {
                    b.HasOne("SilverMotionCinema.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__Booking__52593CB8");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("SilverMotionCinema.Show", b =>
                {
                    b.HasOne("SilverMotionCinema.CinemaHall", "CinemaHall")
                        .WithMany("Shows")
                        .HasForeignKey("CinemaHallId")
                        .IsRequired()
                        .HasConstraintName("FK__Show__CinemaHall__4316F928");

                    b.HasOne("SilverMotionCinema.Movie", "Movie")
                        .WithMany("Shows")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK__Show__MovieID__440B1D61");

                    b.Navigation("CinemaHall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("SilverMotionCinema.ShowSeat", b =>
                {
                    b.HasOne("SilverMotionCinema.Booking", "Booking")
                        .WithMany("ShowSeats")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Show_Seat__Booki__4F7CD00D");

                    b.HasOne("SilverMotionCinema.CinemaSeat", "CinemaSeat")
                        .WithMany("ShowSeats")
                        .HasForeignKey("CinemaSeatId")
                        .IsRequired()
                        .HasConstraintName("FK__Show_Seat__Cinem__4D94879B");

                    b.HasOne("SilverMotionCinema.Show", "Show")
                        .WithMany("ShowSeats")
                        .HasForeignKey("ShowId")
                        .IsRequired()
                        .HasConstraintName("FK__Show_Seat__ShowI__4E88ABD4");

                    b.Navigation("Booking");

                    b.Navigation("CinemaSeat");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("SilverMotionCinema.Booking", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("ShowSeats");
                });

            modelBuilder.Entity("SilverMotionCinema.Cinema", b =>
                {
                    b.Navigation("CinemaHalls");
                });

            modelBuilder.Entity("SilverMotionCinema.CinemaHall", b =>
                {
                    b.Navigation("CinemaSeats");

                    b.Navigation("Shows");
                });

            modelBuilder.Entity("SilverMotionCinema.CinemaSeat", b =>
                {
                    b.Navigation("ShowSeats");
                });

            modelBuilder.Entity("SilverMotionCinema.City", b =>
                {
                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("SilverMotionCinema.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("SilverMotionCinema.Models.AgeRating", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("SilverMotionCinema.Movie", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("SilverMotionCinema.Show", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("ShowSeats");
                });

            modelBuilder.Entity("SilverMotionCinema.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
